#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define SYM_L 2
#define FUN_L 3

#define MEH LCTL(LSHFT(LALT))

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        caps_word_combo {
	    timeout-ms = <50>;
            key-positions = <12 19>;
            bindings = <&caps_word>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha_layer {
            label = "Alpha";
            bindings = <
                &sk MEH      &kp W        &kp F       &kp P        &kp COMMA     &kp DOT   &kp SLASH       &kp J       &kp Y        &hm LCTL A
                &hm LCTRL A  &hm LSHFT R  &hm LALT S  &kp T        &kp G         &kp M     &kp N           &hm RALT H  &hm RSHFT I  &hm RCTL O
                &hm LGUI Z   &kp X        &kp C       &kp D        &kp V         &kp Q     &kp L           &kp U       &kp B        &hm RGUI K
					              &lt SYM_L E  &kp BKSP      &kp TAB   &lt NAV_L SPACE
            >;
        };

        nav_layer {
            label = "Navigation";
            bindings = <
                &none     &none     &none      &none      &none      &hm LCTL H  &hm LCTL J  &hm LCTL K &hm LCTL L &none 
                &none     &none     &none      &none      &none      &kp LARW    &kp DARW    &kp UARW   &kp RARW   &none
                &none     &none     &none      &none      &none      &kp HOME    &kp PG_DN   &kp PG_UP  &kp END    &none
                                               &none      &kp DEL    &none       &none
            >;
        };

        num_layer {
            label = "Symbol";
            bindings = <
                &none      &kp AT     &kp HASH    &kp DLR    &kp PERC     &kp CIRC     &kp AMPR    &kp ASTR    &none      &none
                &kp N1     &kp N2     &kp N3      &kp N4     &kp N5       &kp N6       &kp N7      &KP N8      &kp N9     &kp N0
                &kp GRAVE  &kp TILD   &kp EXLM    &kp BSLS   &kp PIPE     &kp QUES     &kp UNDS    &bp MINUS   &kp PLUS   &kp EQUAL
                                                  &kp N0     &kp MINUS    &none        &none
            >;
        };

        fun_layer {
            label = "Funtion";
            bindings = <
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none     &bootloader  &none     &none   &none   &none
                &kp F1        &kp F2        &kp F3        &kp F4        &kp F5    &kp F6       &kp F7    &kp F8  &kp F9  &kp F10
                &kp F11       &kp F12       &kp PSCRN     &none         &none     &none        &none     &none   &none   &none
                                                          &none         &none     &none        &none
            >;
        };
    };
};

